echo $PATH //打印环境变脸
export PATH="$PATH:/home/user/bin"		//添加环境变量
var=1235
length=${#var}//求var的长度
echo $SHELL  //查看当前使用的使那种shell

0——stdin 标准输入
1——stdout 标准输出
2——stderr 标准错误
echo "this is a sample text 1" > temp.txt 		覆盖原内容
echo "this is a sample text 2" >> temp.txt		文件尾追加
>等于1> ;>>等于1>>
ls + 2> out.txt 				错误打印到out.txt
ls + 2> stderr.txt 1>stdout.txt  
ls + 2>&1 output.txt
ls + &> output.txt

cat a* | tee out.txt | cat -n
echo "a" | tee -     				将stdin作为参数，-代表参数



############################################################
变量
############################################################
变量名是指向一片用于存储数据的内存空间。
变量：局部变量，环境变量（全局变量）。
shell变量是一种弱类型变量

局部变量：在某一个shell中有效
环境变量：可以使用export内建指令到处为环境变量，环境变量可以派生到任意子shell和孙shell，只能由上向下。

bash中预设的环境变量：$BASH $BASH_VERSION $CDPATH $EUID  $FUNCNAME $HISTCMD $HISTFILE $HISTFILESIZE $HISTSIZE $HOSTNAME $HOSTTYPE $MACHTYPE $LANG $PWD $OLDPWD $PATH $PS1

变量命名：以字母和下划线开头，后跟字母，数字下划线，区别大小写

变量赋值和取值： 变量名=变量值 ，没有空格，当变量中有空格是需要使用引号括起来（单双都行）

取值变量前加上$,严谨的方法是${},如果变量引用的别的变量的值需要使用双引号括起来，不能使用单引号（单引号会阻止shell解释特殊字符）

虽说shell是弱类型变量，但是应该遵守先申明后使用，规范不容易出错
设置shell：shopt -s -o nounset

取消变量：unset variable_name
取消函数：unset function_name

特殊变量：
		位置参数：$0,脚本本身 $1，第一个参数 $2，第二个参数 ${10},第十个参数，超过九个就应该使用{}
		
		脚本或命令的返回值：$?, 永远是上一个命令的返回值
		
数组：
	定义：declare -a array
	       array[0]=.....
		   array[1]=.....
		  
		  declare -a name=('..','..')
		  
		  name=('...','....')
		  
		  score=([3]=3 [5]=5 [8]=8)

数组操作：echo ${array[1]}
		
		//列举所有元素
		echo ${array[@]}
		echo ${array[*]}  
		
		//取得数组元素个数
		echo ${#array[@]} 
		echo ${#array[*]}
		
		//截取元素的某一部分，或数组的某一部分
		${array[@]:1:2}
		${array[2]:0:5}
		
		//连接数组
		conn=(${array[@]} ${name[@]})
		 
		//替换元素
		arr=(${array[@]/helloworld/hellojohn})
		
		//取消数组或元素
		unset array[1]
		unset array
		
只读变量：
		
############################################################
变量
############################################################



############################################################
变量
############################################################




############################################################
变量
############################################################



############################################################
变量
############################################################




############################################################
变量
############################################################




############################################################
变量
############################################################




############################################################
变量
############################################################




############################################################
变量
############################################################





############################################################
变量
############################################################






############################################################
变量
############################################################







############################################################
变量
############################################################






############################################################
变量
############################################################






############################################################
变量
############################################################






############################################################
变量
############################################################






############################################################
变量
############################################################






